// <auto-generated />
using System;
using System.Diagnostics.CodeAnalysis;
using Lira.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Lira.Data.Migrations;

[ExcludeFromCodeCoverage]
[DbContext(typeof(LiraDbContext))]
partial class LiraDbContextModelSnapshot : ModelSnapshot
{
    protected override void BuildModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
        modelBuilder
            .HasAnnotation("ProductVersion", value: "7.0.12")
            .HasAnnotation("Relational:MaxIdentifierLength", value: 63);

        NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

        modelBuilder.Entity(name: "Lira.Data.Entities.PersonEntity", b =>
        {
            b.Property<Guid>("Id")
                .ValueGeneratedOnAdd()
                .HasColumnType("uuid")
                .HasColumnName("id");

            b.Property<string>("Cpf")
                .IsRequired()
                .HasColumnType("varchar(11)")
                .HasColumnName("cpf");

            b.Property<DateTime>("CreatedAt")
                .HasColumnType("timestamp with time zone")
                .HasColumnName("created_at");

            b.Property<DateTime?>("DeletedAt")
                .HasColumnType("timestamp with time zone")
                .HasColumnName("deleted_at");

            b.Property<string>("Name")
                .IsRequired()
                .HasColumnType("varchar(30)")
                .HasColumnName("name");

            b.Property<string>("Status")
                .IsRequired()
                .ValueGeneratedOnAdd()
                .HasColumnType("varchar")
                .HasDefaultValue("Active")
                .HasColumnName("status");

            b.Property<string>("Surname")
                .IsRequired()
                .HasColumnType("varchar(30)")
                .HasColumnName("surname");

            b.Property<DateTime?>("UpdatedAt")
                .HasColumnType("timestamp with time zone")
                .HasColumnName("updated_at");

            b.HasKey("Id")
                .HasName("PK_persons_id");

            b.HasIndex("Cpf")
                .IsUnique()
                .HasDatabaseName("IX_persons_cpf");

            b.ToTable(name: "persons", schema: null, t =>
            {
                t.HasCheckConstraint(
                    name: "CK_persons_status",
                    sql: "status IN ('Active', 'Inactive', 'Deleted')"
                );
            });
        });
#pragma warning restore 612, 618
    }
}
